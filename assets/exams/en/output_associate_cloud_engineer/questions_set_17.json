[
  {
    "question": "Your company developed a mobile game that is deployed on Google Cloud. Gamers are connecting to the game with their personal phones over the Internet. The game sends UDP packets to update the servers about the gamers' actions while they are playing in multiplayer mode. Your game backend can scale over multiple virtual machines (VMs), and you want to expose the VMs over a single IP address. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Configure an SSL Proxy load balancer in front of the application servers.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Configure an Internal UDP load balancer in front of the application servers.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Configure an External HTTP(s) load balancer in front of the application servers.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Configure an External Network load balancer in front of the application servers.",
        "correct": true,
        "why": ""
      }
    }
  },
  {
    "question": "You are working for a hospital that stores its medical images in an on-premises data room. The hospital wants to use Cloud Storage for archival storage of these images. The hospital wants an automated process to upload any new medical images to Cloud Storage. You need to design and implement a solution. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Create a Pub/Sub topic, and enable a Cloud Storage trigger for the Pub/Sub topic. Create an application that sends all medical images to the Pub/Sub topic.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Deploy a Dataflow job from the batch template, ג€Datastore to Cloud Storage.ג€ Schedule the batch job on the desired interval.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Create a script that uses the gsutil command line interface to synchronize the on-premises storage with Cloud Storage. Schedule the script as a cron job.",
        "correct": true,
        "why": ""
      },
      "D": {
        "answer": "In the Cloud Console, go to Cloud Storage. Upload the relevant images to the appropriate bucket.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "Your auditor wants to view your organization's use of data in Google Cloud. The auditor is most interested in auditing who accessed data in Cloud Storage buckets. You need to help the auditor access the data they need. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Turn on Data Access Logs for the buckets they want to audit, and then build a query in the log viewer that filters on Cloud Storage.",
        "correct": true,
        "why": ""
      },
      "B": {
        "answer": "Assign the appropriate permissions, and then create a Data Studio report on Admin Activity Audit Logs.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Assign the appropriate permissions, and then use Cloud Monitoring to review metrics.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Use the export logs API to provide the Admin Activity Audit Logs in the format they want.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You received a JSON file that contained a private key of a Service Account in order to get access to several resources in a Google Cloud project. You downloaded and installed the Cloud SDK and want to use this private key for authentication and authorization when performing gcloud commands. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Use the command gcloud auth login and point it to the private key.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Use the command gcloud auth activate-service-account and point it to the private key.",
        "correct": true,
        "why": ""
      },
      "C": {
        "answer": "Place the private key file in the installation directory of the Cloud SDK and rename it to ג€credentials.jsonג€.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Place the private key file in your home directory and rename it to ג€GOOGLE_APPLICATION_CREDENTIALSג€.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You are working with a Cloud SQL MySQL database at your company. You need to retain a month-end copy of the database for three years for audit purposes.What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Set up an export job for the first of the month. Write the export file to an Archive class Cloud Storage bucket.",
        "correct": true,
        "why": ""
      },
      "B": {
        "answer": "Save the automatic first-of-the-month backup for three years. Store the backup file in an Archive class Cloud Storage bucket.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Set up an on-demand backup for the first of the month. Write the backup to an Archive class Cloud Storage bucket.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Convert the automatic first-of-the-month backup to an export file. Write the export file to a Coldline class Cloud Storage bucket.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You are monitoring an application and receive user feedback that a specific error is spiking. You notice that the error is caused by a Service Account having insufficient permissions. You are able to solve the problem but want to be notified if the problem recurs. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "In the Log Viewer, filter the logs on severity 'Error' and the name of the Service Account.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Create a sink to BigQuery to export all the logs. Create a Data Studio dashboard on the exported logs.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Create a custom log-based metric for the specific error to be used in an Alerting Policy.",
        "correct": true,
        "why": ""
      },
      "D": {
        "answer": "Grant Project Owner access to the Service Account.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You are developing a financial trading application that will be used globally. Data is stored and queried using a relational structure, and clients from all over the world should get the exact identical state of the data. The application will be deployed in multiple regions to provide the lowest latency to end users. You need to select a storage option for the application data while minimizing latency. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Use Cloud Bigtable for data storage.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Use Cloud SQL for data storage.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Use Cloud Spanner for data storage.",
        "correct": true,
        "why": ""
      },
      "D": {
        "answer": "Use Firestore for data storage.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You are about to deploy a new Enterprise Resource Planning (ERP) system on Google Cloud. The application holds the full database in-memory for fast data access, and you need to configure the most appropriate resources on Google Cloud for this application. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Provision preemptible Compute Engine instances.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Provision Compute Engine instances with GPUs attached.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Provision Compute Engine instances with local SSDs attached.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Provision Compute Engine instances with M1 machine type.",
        "correct": true,
        "why": ""
      }
    }
  },
  {
    "question": "You have developed an application that consists of multiple microservices, with each microservice packaged in its own Docker container image. You want to deploy the entire application on Google Kubernetes Engine so that each microservice can be scaled individually. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Create and deploy a Custom Resource Definition per microservice.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Create and deploy a Docker Compose File.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Create and deploy a Job per microservice.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Create and deploy a Deployment per microservice.",
        "correct": true,
        "why": ""
      }
    }
  },
  {
    "question": "You will have several applications running on different Compute Engine instances in the same project. You want to specify at a more granular level the service account each instance uses when calling Google Cloud APIs. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "When creating the instances, specify a Service Account for each instance.",
        "correct": true,
        "why": ""
      },
      "B": {
        "answer": "When creating the instances, assign the name of each Service Account as instance metadata.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "After starting the instances, use gcloud compute instances update to specify a Service Account for each instance.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "After starting the instances, use gcloud compute instances update to assign the name of the relevant Service Account as instance metadata.",
        "correct": false,
        "why": ""
      }
    }
  }
]