[
  {
    "question": "An employee was terminated, but their access to Google Cloud was not removed until 2 weeks later. You need to find out this employee accessed any sensitive customer information after their termination. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "View System Event Logs in Cloud Logging. Search for the user's email as the principal.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "View System Event Logs in Cloud Logging. Search for the service account associated with the user.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "View Data Access audit logs in Cloud Logging. Search for the user's email as the principal.",
        "correct": true,
        "why": ""
      },
      "D": {
        "answer": "View the Admin Activity log in Cloud Logging. Search for the service account associated with the user.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You need to create a custom IAM role for use with a GCP service. All permissions in the role must be suitable for production use. You also want to clearly share with your organization the status of the custom role. This will be the first version of the custom role. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Use permissions in your role that use the 'supported' support level for role permissions. Set the role stage to ALPHA while testing the role permissions.",
        "correct": true,
        "why": ""
      },
      "B": {
        "answer": "Use permissions in your role that use the 'supported' support level for role permissions. Set the role stage to BETA while testing the role permissions.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Use permissions in your role that use the 'testing' support level for role permissions. Set the role stage to ALPHA while testing the role permissions.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Use permissions in your role that use the 'testing' support level for role permissions. Set the role stage to BETA while testing the role permissions.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "Your company has a large quantity of unstructured data in different file formats. You want to perform ETL transformations on the data. You need to make the data accessible on Google Cloud so it can be processed by a Dataflow job. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Upload the data to BigQuery using the bq command line tool.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Upload the data to Cloud Storage using the gsutil command line tool.",
        "correct": true,
        "why": ""
      },
      "C": {
        "answer": "Upload the data into Cloud SQL using the import function in the console.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Upload the data into Cloud Spanner using the import function in the console.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You need to manage multiple Google Cloud projects in the fewest steps possible. You want to configure the Google Cloud SDK command line interface (CLI) so that you can easily manage multiple projects. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "1. Create a configuration for each project you need to manage. 2. Activate the appropriate configuration when you work with each of your assigned Google Cloud projects.",
        "correct": true,
        "why": ""
      },
      "B": {
        "answer": "1. Create a configuration for each project you need to manage. 2. Use gcloud init to update the configuration values when you need to work with a non-default project",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "1. Use the default configuration for one project you need to manage. 2. Activate the appropriate configuration when you work with each of your assigned Google Cloud projects.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "1. Use the default configuration for one project you need to manage. 2. Use gcloud init to update the configuration values when you need to work with a non-default project.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "Your managed instance group raised an alert stating that new instance creation has failed to create new instances. You need to maintain the number of running instances specified by the template to be able to process expected application traffic. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Create an instance template that contains valid syntax which will be used by the instance group. Delete any persistent disks with the same name as instance names.",
        "correct": true,
        "why": ""
      },
      "B": {
        "answer": "Create an instance template that contains valid syntax that will be used by the instance group. Verify that the instance name and persistent disk name values are not the same in the template.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Verify that the instance template being used by the instance group contains valid syntax. Delete any persistent disks with the same name as instance names. Set the disks.autoDelete property to true in the instance template.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Delete the current instance template and replace it with a new instance template. Verify that the instance name and persistent disk name values are not the same in the template. Set the disks.autoDelete property to true in the instance template.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "Your company is moving from an on-premises environment to Google Cloud. You have multiple development teams that use Cassandra environments as backend databases. They all need a development environment that is isolated from other Cassandra instances. You want to move to Google Cloud quickly and with minimal support effort. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "1. Build an instruction guide to install Cassandra on Google Cloud. 2. Make the instruction guide accessible to your developers.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "1. Advise your developers to go to Cloud Marketplace. 2. Ask the developers to launch a Cassandra image for their development work.",
        "correct": true,
        "why": ""
      },
      "C": {
        "answer": "1. Build a Cassandra Compute Engine instance and take a snapshot of it. 2. Use the snapshot to create instances for your developers.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "1. Build a Cassandra Compute Engine instance and take a snapshot of it. 2. Upload the snapshot to Cloud Storage and make it accessible to your developers. 3. Build instructions to create a Compute Engine instance from the snapshot so that developers can do it themselves.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You have a Compute Engine instance hosting a production application. You want to receive an email if the instance consumes more than 90% of its CPU resources for more than 15 minutes. You want to use Google services. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "1. Create a consumer Gmail account. 2. Write a script that monitors the CPU usage. 3. When the CPU usage exceeds the threshold, have that script send an email using the Gmail account and smtp.gmail.com on port 25 as SMTP server.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "1. Create a Cloud Monitoring Workspace and associate your Google Cloud Platform (GCP) project with it. 2. Create a Cloud Monitoring Alerting Policy that uses the threshold as a trigger condition. 3. Configure your email address in the notification channel.",
        "correct": true,
        "why": ""
      },
      "C": {
        "answer": "1. Create a Cloud Monitoring Workspace and associate your GCP project with it. 2. Write a script that monitors the CPU usage and sends it as a custom metric to Cloud Monitoring. 3. Create an uptime check for the instance in Cloud Monitoring.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "1. In Cloud Logging, create a logs-based metric to extract the CPU usage by using this regular expression: CPU Usage: ([0-9] {1,3})% 2. In Cloud Monitoring, create an Alerting Policy based on this metric. 3. Configure your email address in the notification channel.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You have an application that uses Cloud Spanner as a backend database. The application has a very predictable traffic pattern. You want to automatically scale up or down the number of Spanner nodes depending on traffic. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Create a cron job that runs on a scheduled basis to review Cloud Monitoring metrics, and then resize the Spanner instance accordingly.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Create a Cloud Monitoring alerting policy to send an alert to oncall SRE emails when Cloud Spanner CPU exceeds the threshold. SREs would scale resources up or down accordingly.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Create a Cloud Monitoring alerting policy to send an alert to Google Cloud Support email when Cloud Spanner CPU exceeds your threshold. Google support would scale resources up or down accordingly.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Create a Cloud Monitoring alerting policy to send an alert to webhook when Cloud Spanner CPU is over or under your threshold. Create a Cloud Function that listens to HTTP and resizes Spanner resources accordingly.",
        "correct": true,
        "why": ""
      }
    }
  },
  {
    "question": "Your company publishes large files on an Apache web server that runs on a Compute Engine instance. The Apache web server is not the only application running in the project. You want to receive an email when the egress network costs for the server exceed 100 dollars for the current month as measured by Google Cloud.What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Set up a budget alert on the project with an amount of 100 dollars, a threshold of 100%, and notification type of ג€email.ג€",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Set up a budget alert on the billing account with an amount of 100 dollars, a threshold of 100%, and notification type of ג€email.ג€",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Export the billing data to BigQuery. Create a Cloud Function that uses BigQuery to sum the egress network costs of the exported billing data for the Apache web server for the current month and sends an email if it is over 100 dollars. Schedule the Cloud Function using Cloud Scheduler to run hourly.",
        "correct": true,
        "why": ""
      },
      "D": {
        "answer": "Use the Cloud Logging Agent to export the Apache web server logs to Cloud Logging. Create a Cloud Function that uses BigQuery to parse the HTTP response log data in Cloud Logging for the current month and sends an email if the size of all HTTP responses, multiplied by current Google Cloud egress prices, totals over 100 dollars. Schedule the Cloud Function using Cloud Scheduler to run hourly.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You have designed a solution on Google Cloud that uses multiple Google Cloud products. Your company has asked you to estimate the costs of the solution. You need to provide estimates for the monthly total cost. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "For each Google Cloud product in the solution, review the pricing details on the products pricing page. Use the pricing calculator to total the monthly costs for each Google Cloud product.",
        "correct": true,
        "why": ""
      },
      "B": {
        "answer": "For each Google Cloud product in the solution, review the pricing details on the products pricing page. Create a Google Sheet that summarizes the expected monthly costs for each product.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Provision the solution on Google Cloud. Leave the solution provisioned for 1 week. Navigate to the Billing Report page in the Cloud Console. Multiply the 1 week cost to determine the monthly costs.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Provision the solution on Google Cloud. Leave the solution provisioned for 1 week. Use Cloud Monitoring to determine the provisioned and used resource amounts. Multiply the 1 week cost to determine the monthly costs.",
        "correct": false,
        "why": ""
      }
    }
  }
]