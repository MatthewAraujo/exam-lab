[
  {
    "question": "You need to produce a list of the enabled Google Cloud Platform APIs for a GCP project using the gcloud command line in the Cloud Shell. The project name is my-project. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Run gcloud projects list to get the project ID, and then run gcloud services list --project <project ID>.",
        "correct": true,
        "why": ""
      },
      "B": {
        "answer": "Run gcloud init to set the current project to my-project, and then run gcloud services list --available.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Run gcloud info to view the account value, and then run gcloud services list --account <Account>.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Run gcloud projects describe <project ID> to verify the project value, and then run gcloud services list --available.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You are building a new version of an application hosted in an App Engine environment. You want to test the new version with 1% of users before you completely switch your application over to the new version. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Deploy a new version of your application in Google Kubernetes Engine instead of App Engine and then use GCP Console to split traffic.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Deploy a new version of your application in a Compute Engine instance instead of App Engine and then use GCP Console to split traffic.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Deploy a new version as a separate app in App Engine. Then configure App Engine using GCP Console to split traffic between the two apps.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Deploy a new version of your application in App Engine. Then go to App Engine settings in GCP Console and split traffic between the current version and newly deployed versions accordingly.",
        "correct": true,
        "why": ""
      }
    }
  },
  {
    "question": "You need to provide a cost estimate for a Kubernetes cluster using the GCP pricing calculator for Kubernetes. Your workload requires high IOPs, and you will also be using disk snapshots. You start by entering the number of nodes, average hours, and average days. What should you do next?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Fill in local SSD. Fill in persistent disk storage and snapshot storage.",
        "correct": true,
        "why": ""
      },
      "B": {
        "answer": "Fill in local SSD. Add estimated cost for cluster management.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Select Add GPUs. Fill in persistent disk storage and snapshot storage.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Select Add GPUs. Add estimated cost for cluster management.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You are using Google Kubernetes Engine with autoscaling enabled to host a new application. You want to expose this new application to the public, using HTTPS on a public IP address. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Create a Kubernetes Service of type NodePort for your application, and a Kubernetes Ingress to expose this Service via a Cloud Load Balancer.",
        "correct": true,
        "why": ""
      },
      "B": {
        "answer": "Create a Kubernetes Service of type ClusterIP for your application. Configure the public DNS name of your application using the IP of this Service.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Create a Kubernetes Service of type NodePort to expose the application on port 443 of each node of the Kubernetes cluster. Configure the public DNS name of your application with the IP of every node of the cluster to achieve load-balancing.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Create a HAProxy pod in the cluster to load-balance the traffic to all the pods of the application. Forward the public traffic to HAProxy with an iptable rule. Configure the DNS name of your application using the public IP of the node HAProxy is running on.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You need to enable traffic between multiple groups of Compute Engine instances that are currently running two different GCP projects. Each group of ComputeEngine instances is running in its own VPC. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Verify that both projects are in a GCP Organization. Create a new VPC and add all instances.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Verify that both projects are in a GCP Organization. Share the VPC from one project and request that the Compute Engine instances in the other project use this shared VPC.",
        "correct": true,
        "why": ""
      },
      "C": {
        "answer": "Verify that you are the Project Administrator of both projects. Create two new VPCs and add all instances.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Verify that you are the Project Administrator of both projects. Create a new VPC and add all instances.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You want to add a new auditor to a Google Cloud Platform project. The auditor should be allowed to read, but not modify, all project items.How should you configure the auditor's permissions?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Create a custom role with view-only project permissions. Add the user's account to the custom role.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Create a custom role with view-only service permissions. Add the user's account to the custom role.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Select the built-in IAM project Viewer role. Add the user's account to this role.",
        "correct": true,
        "why": ""
      },
      "D": {
        "answer": "Select the built-in IAM service Viewer role. Add the user's account to this role.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You are operating a Google Kubernetes Engine (GKE) cluster for your company where different teams can run non-production workloads. Your Machine Learning(ML) team needs access to Nvidia Tesla P100 GPUs to train their models. You want to minimize effort and cost. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Ask your ML team to add the ג€accelerator: gpuג€ annotation to their pod specification.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Recreate all the nodes of the GKE cluster to enable GPUs on all of them.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Create your own Kubernetes cluster on top of Compute Engine with nodes that have GPUs. Dedicate this cluster to your ML team.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Add a new, GPU-enabled, node pool to the GKE cluster. Ask your ML team to add the cloud.google.com/gke -accelerator: nvidia-tesla-p100 nodeSelector to their pod specification.",
        "correct": true,
        "why": ""
      }
    }
  },
  {
    "question": "Your VMs are running in a subnet that has a subnet mask of 255.255.255.240. The current subnet has no more free IP addresses and you require an additional10 IP addresses for new VMs. The existing and new VMs should all be able to reach each other without additional routes. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Use gcloud to expand the IP range of the current subnet.",
        "correct": true,
        "why": ""
      },
      "B": {
        "answer": "Delete the subnet, and recreate it using a wider range of IP addresses.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Create a new project. Use Shared VPC to share the current network with the new project.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Create a new subnet with the same starting IP but a wider range to overwrite the current subnet.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "Your organization uses G Suite for communication and collaboration. All users in your organization have a G Suite account. You want to grant some G Suite users access to your Cloud Platform project. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Enable Cloud Identity in the GCP Console for your domain.",
        "correct": false,
        "why": ""
      },
      "B": {
        "answer": "Grant them the required IAM roles using their G Suite email address.",
        "correct": true,
        "why": ""
      },
      "C": {
        "answer": "Create a CSV sheet with all users' email addresses. Use the gcloud command line tool to convert them into Google Cloud Platform accounts.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "In the G Suite console, add the users to a special group called cloud-console-users@yourdomain.com. Rely on the default behavior of the Cloud Platform to grant users access if they are members of this group.",
        "correct": false,
        "why": ""
      }
    }
  },
  {
    "question": "You have a Google Cloud Platform account with access to both production and development projects. You need to create an automated process to list all compute instances in development and production projects on a daily basis. What should you do?",
    "multichoice": false,
    "alternatives": {
      "A": {
        "answer": "Create two configurations using gcloud config. Write a script that sets configurations as active, individually. For each configuration, use gcloud compute instances list to get a list of compute resources.",
        "correct": true,
        "why": ""
      },
      "B": {
        "answer": "Create two configurations using gsutil config. Write a script that sets configurations as active, individually. For each configuration, use gsutil compute instances list to get a list of compute resources.",
        "correct": false,
        "why": ""
      },
      "C": {
        "answer": "Go to Cloud Shell and export this information to Cloud Storage on a daily basis.",
        "correct": false,
        "why": ""
      },
      "D": {
        "answer": "Go to GCP Console and export this information to Cloud SQL on a daily basis.",
        "correct": false,
        "why": ""
      }
    }
  }
]